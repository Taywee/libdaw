from datetime import timedelta
from typing import Any, Self

class Duration:
    def __init__(self, seconds: float | timedelta) -> None: ...
    def seconds(self) -> float: ...
    def timedelta(self) -> timedelta: ...
    def __lt__(self, other: Self) -> bool: ...
    def __le__(self, other: Self) -> bool: ...
    def __eq__(self, other: Self) -> bool: ...
    def __ne__(self, other: Self) -> bool: ...
    def __gt__(self, other: Self) -> bool: ...
    def __ge__(self, other: Self) -> bool: ...
    def __copy__(self) -> Self: ...
    def __deepcopy__(self, memo: dict[Any, Any]) -> Self: ...

class Time:
    def __init__(self, seconds: float | timedelta) -> None: ...
    def seconds(self) -> float: ...
    def timedelta(self) -> timedelta: ...
    def __lt__(self, other: Self) -> bool: ...
    def __le__(self, other: Self) -> bool: ...
    def __eq__(self, other: Self) -> bool: ...
    def __ne__(self, other: Self) -> bool: ...
    def __gt__(self, other: Self) -> bool: ...
    def __ge__(self, other: Self) -> bool: ...
    def __copy__(self) -> Self: ...
    def __deepcopy__(self, memo: dict[Any, Any]) -> Self: ...

class Timestamp:
    def __init__(self, seconds: float | timedelta) -> None: ...
    def seconds(self) -> float: ...
    def timedelta(self) -> timedelta: ...
    def __lt__(self, other: Self) -> bool: ...
    def __le__(self, other: Self) -> bool: ...
    def __eq__(self, other: Self) -> bool: ...
    def __ne__(self, other: Self) -> bool: ...
    def __gt__(self, other: Self) -> bool: ...
    def __ge__(self, other: Self) -> bool: ...
    def __copy__(self) -> Self: ...
    def __deepcopy__(self, memo: dict[Any, Any]) -> Self: ...
